# Load secret properties
spring.config.import=optional:classpath:application-secret.properties

# =====================
# Server Configuration
# =====================
server.port=8081

# =====================
# CORS Configuration
# =====================
spring.mvc.cors.allowed-origins=http://localhost:3000
spring.main.allow-bean-definition-overriding=true

# =====================
# Database Configuration
# =====================
spring.datasource.url=jdbc:mysql://localhost:3306/lms_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# =====================
# Hibernate Configuration
# =====================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# =====================
# Application Info
# =====================
spring.application.name=backend

# =====================
# JWT Configuration
# =====================
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# =====================
# Admin Secret
# =====================
app.admin.secret=${ADMIN_SECRET}
super.admin.key=${SUPER_ADMIN_KEY}


# === Gmail SMTP (no password here) ===
# === Gmail SMTP (no password here) ===
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.debug=false   # set to false after verifying

# pretty From name (works with SimpleMailMessage)
mail.from=SmartLendOfficial <smartlendlms1@gmail.com>
